Set up by compiling the main transducer.

Compile segmenter by

```
make
```

Use/test by

```
echo "сөздерімді" | hfst-proc kaz.segmenter.hfst
```

You should get output like this:

```
^сөздерімді/сөз>дер>ім>ді$
```

Notes
* Morpheme boundaries are sometimes a little arbitrary, e.g. -IңIздAр (e.g., сөзіңіздер), сIздAр, etc., are done as one morpheme.  These are trivial to change in the main transducer (lexc file).
* Some words might have more than one analysis, e.g. поезде
* Relatedly, there's currently something wrong with implementation of the error model
* In this case, we're just using the morpheme boundary in raw forms, which results in some weird stuff.  So e.g. `күнін/күн>ін>` even though the morphotactic form is `күн>{s}{I}{n}>{N}{I}` (POSS.3-ACC) and `поезде/поез>де` even though the morphtotactic form is `поезд>{D}{A}`.  This means you can connect a segemented form with its unsegmented form (by simply removing the `>`s), but you can't tell which morphemes correspond to each other (even stems sometimes).
